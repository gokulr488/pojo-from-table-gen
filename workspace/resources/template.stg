pojoTemplate(className,variables,gettersAndSetters) ::=<<
package PojoFromTableGen.pojos.dos;

import java.sql.Date;

public class <className>Do {

	<variables>
	
	<gettersAndSetters>
	
}
>>

getterSetter(dataType,capVariableName,smallVariableName) ::=<<
public <dataType> get<capVariableName>() {
	return <smallVariableName>;
}

public void set<capVariableName>(<dataType> <smallVariableName>) {
	this.<smallVariableName> = <smallVariableName>;
}
	
>>

daoInterface(interfaceName,varName) ::=<<
package PojoFromTableGen.pojos.daos;

import java.sql.Connection;

import PojoFromTableGen.pojos.dos.<interfaceName>Do;

public interface <interfaceName>Dao {

	public void insert(<interfaceName>Do <varName>Do, Connection conn);

	public <interfaceName>Do retrieveById(long id, Connection conn);
	
}
>>

daoImpl(interfaceName,varName) ::=<<
package PojoFromTableGen.pojos.daos;

import java.sql.Connection;

import PojoFromTableGen.pojos.dos.<interfaceName>Do;

public interface <interfaceName>Dao {

	public void insert(<interfaceName>Do <varName>Do, Connection conn);

	public <interfaceName>Do retrieveById(long id, Connection conn);
	
}
>>

setterStatement(dataType,index,varName,getter) ::=<<
stmt.set<dataType>(<index>, <varName>.get<getter>());
>>

insertQuery(className,varName,tableName,columns,values,setterStatements,refferingTableInsert) ::=<<
public void insert(<className> <varName>, Connection conn) throws SQLException {

		PreparedStatement stmt = conn
				.prepareStatement("INSERT INTO <tableName>(<columns>) VALUES(<values>)");
		<setterStatements>
		stmt.executeUpdate();
		<refferingTableInsert>
	}
>>
sequenceCreateScript(className,varName,tableName,columns,values,setterStatements,refferingTableInsert) ::=<<
CREATE SEQUENCE T_SUB_EVENT_SEQ
    INCREMENT BY 1
    START WITH 1
    CACHE 2;
>>

hibernateEntity(tableName,className,variables,primaryKey,foreignKeys,gettersAndSetters) ::=<<
package com.algols.datapersistance.dos;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@SequenceGenerator(name = "T_SUB_EVENT_SEQ", sequenceName = "T_SUB_EVENT_SEQ", initialValue = 1, allocationSize = 1)
@Table(name = "<tableName>")
public class <className> {

	public <className>() {

	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "T_SUB_EVENT_SEQ")
	<primaryKey>

	<variables>


	//TODO add all foreign key objects here
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "SUB_EVENT_ID")
	private TSubEventDo tSubEventDo;

	<gettersAndSetters>

}
>>




